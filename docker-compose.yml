version: '3.3'
services:
  mongo_db:
    image: mongo:${REDDIT_MONGO_VERSION}
    deploy:
      placement:
        constraints:
          - node.labels.reliability == high
    volumes:
      - post_db:/data/db
    networks:
      reddit_back:
        aliases:
          - db_post
          - db_comment

  ui:
    image: ${USERNAME}/ui:${REDDIT_UI_VERSION}
    environment:
      - ENV=DEV
    deploy:
      mode: replicated
      replicas: 3
      update_config:
        delay: 5s
        parallelism: 1
        failure_action: pause
      resources:
        limits:
          cpus: '0.25'
          memory: 150M
      placement:
        constraints:
          - node.role == worker
      restart_policy:
        condition: on-failure
        max_attempts: 3
        delay: 3s
    ports:
      - ${REDDIT_PORT}:9292/tcp
    networks:
      reddit_front:

  post:
    image: ${USERNAME}/post:${REDDIT_POST_VERSION}
    deploy:
      mode: replicated
      replicas: 3
      update_config:
        delay: 10s
        parallelism: 2
        failure_action: rollback
      resources:
        limits:
          cpus: '0.3'
          memory: 300M
      placement:
        constraints:
          - node.role == worker
      restart_policy:
        condition: on-failure
        max_attempts: 15
        delay: 1s
    networks:
      reddit_front:
        aliases:
          - web_post
      reddit_back:

  comment:
    image: ${USERNAME}/comment:${REDDIT_COMMENT_VERSION}
    deploy:
      mode: replicated
      replicas: 3
      update_config:
        delay: 10s
        parallelism: 2
        failure_action: rollback
      resources:
        limits:
          cpus: '0.3'
          memory: 300M
      placement:
        constraints:
          - node.role == worker
      restart_policy:
        condition: on-failure
        max_attempts: 10
        delay: 1s
    networks:
      reddit_front:
        aliases:
          - web_comment
      reddit_back:

  node-exporter:
    image: prom/node-exporter:${REDDIT_NODE_EXPORTER_VERSION}
    deploy:
      mode: global
    user: root
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points="^/(sys|proc|dev|host|etc)($$|/)"'
    networks:
      reddit_back:

  alertmanager:
    image: ${USERNAME}/alertmanager:${REDDIT_ALERTMANAGER_VERSION}
    command:
      - '-config.file=/etc/alertmanager/config.yml'
    ports:
      - ${REDDIT_ALERTMANAGER_PORT}:9093
    networks:
      reddit_back:

  prometheus:
    image: ${USERNAME}/prometheus:${REDDIT_PROMETHEUS_VERSION}
    ports:
      - ${REDDIT_PROMETHEUS_PORT}:9090
    networks:
      reddit_front:
      reddit_back:

  grafana:
    image: grafana/grafana
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${REDDIT_GRAFANA_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${REDDIT_GRAFANA_ADMIN_PASSWORD}
    depends_on:
      - prometheus
    ports:
      - ${REDDIT_GRAFANA_PORT}:3000
    networks:
      reddit_back:

  cadvisor:
    image: google/cadvisor:latest
    volumes:
      - '/:/rootfs:ro'
      - '/var/run:/var/run:rw'
      - '/sys:/sys:ro'
      - '/var/lib/docker/:/var/lib/docker:ro'
    ports:
      - '${REDDIT_CADVISOR_PORT}:8080'
    networks:
      reddit_back:

volumes:
  post_db:
  grafana_data:

networks:
  reddit_back:
  reddit_front:
